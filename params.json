{
  "name": "Docker2gitbook",
  "tagline": "To quickly build service automatically | 快速构建gitbook服务容器，让你专注于创作本身",
  "body": "# Docker2Gitbook \r\n[中文帮助?](#中文说明)\r\n\r\n## Intro\r\nQuickly set up the Gitbook Serve online & focus on creating knowledge.\r\n> The purpose of this project is to simplify the construction and online of Gitbook .\r\n> So you need to know some basic knowledge about Gitbook data structure . (Like knowing the function of SUMMARY.md)\r\n\r\n## How to use\r\n- You should have installed the `docker`.\r\n- Clone the project from the Github.\r\n```sh\r\ngit clone git@github.com:copriwolf/Docker2Gitbook.git\r\n```\r\n- Run the following command to make up a folder named `docs`.\r\n```sh\r\ncd Docker2Gitbook\r\nmkdir docs\r\n```\r\n- Put your documents to the docs(e.g: README.md,SUMMARY.md)\r\n- Run the following command, And wait for the process done.\r\n```sh\r\ndocker build . -t 'docker2gitbook'\r\n```\r\n- Run the following command, And you can find the Gitbook Server is online.\r\n```sh\r\ndocker run -d -p 4000:4000 docker2gitbook\r\n```\r\n\r\n## Project Flow \r\n- Put the `Document Data` to the folder.\r\n- Build the docker images with `Dockerfile` from the Github.\r\n- Run the Gitbook Server \r\n\r\n![](https://github.com/copriwolf/Docker2Gitbook/raw/master/help/flow.png)\r\n\r\n---\r\n\r\n# 中文说明\r\n\r\n## 简介\r\n快速构建gitbook服务容器，让你专注于创作本身。\r\n> 本项目的意图在于把gitbook的构建与上线流程精简化，让用户专注与创作本身，所以你需要先了解Gitbook的数据结构基本知识（使用SUMMARY.md来规范层级关系等）。\r\n\r\n## 使用方法\r\n- 使用本项目前要确保已经安装了`docker`.\r\n- 把本项目克隆到本地上\r\n```sh\r\ngit clone git@github.com:copriwolf/Docker2Gitbook.git\r\n```\r\n- 进入项目文件夹，并创建一个`docs`子文件夹用于存放文章数据。\r\n```sh\r\ncd Docker2Gitbook\r\nmkdir docs\r\n```\r\n- 把你的文章数据(如README.md,SUMMARY.md)放到子目录`docs`中\r\n- 运行以下命令构建你的Gitbook容器(`build`),并等待构建完成。\r\n```sh\r\ndocker build . -t 'docker2gitbook'\r\n```\r\n- 运行以下命令把Gitbook网站开放到本地的4000端口,并后台自动运行服务器\r\n```sh\r\ndocker run -d -p 4000:4000 docker2gitbook\r\n```\r\n\r\n## 项目流程\r\n- 把`文章数据`放置在子文件夹。\r\n- 通过本项目的`DockerFile`文件构建了一个docker镜像\r\n- 通过运行Docker服务来运行Gitbook服务。\r\n\r\n![](https://github.com/copriwolf/Docker2Gitbook/raw/master/help/flow.png)\r\n\r\n## 注意事项\r\n- 如何查看当前服务器是否在运行中？\r\n在本地运行以下命令，查看是否有回传结果，有即说明服务器在运行中。\r\n```sh\r\ndocker ps | grep docker2gitbook\r\n```\r\n\r\n- 我不想开放4000端口，我想开放5500端口可以吗？\r\n可以的，docker提供了端口映射功能，我的脚本默认把容器内的4000端口映射到本地的4000端口，如果你需要，可以改为其他的，你可以修改`使用方法的第6步`\r\n```sh\r\ndocker run -d -p 5500:4000 docker2gitbook\r\n```\r\n\r\n\r\n\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}